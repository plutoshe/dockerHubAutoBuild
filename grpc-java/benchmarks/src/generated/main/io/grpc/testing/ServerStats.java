// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qpstest.proto

package io.grpc.testing;

/**
 * Protobuf type {@code grpc.testing.ServerStats}
 */
public  final class ServerStats extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:grpc.testing.ServerStats)
    ServerStatsOrBuilder {
  // Use ServerStats.newBuilder() to construct.
  private ServerStats(com.google.protobuf.GeneratedMessage.Builder builder) {
    super(builder);
  }
  private ServerStats() {
    timeElapsed_ = 0D;
    timeUser_ = 0D;
    timeSystem_ = 0D;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private ServerStats(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 9: {

            timeElapsed_ = input.readDouble();
            break;
          }
          case 17: {

            timeUser_ = input.readDouble();
            break;
          }
          case 25: {

            timeSystem_ = input.readDouble();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.grpc.testing.QpsTestProto.internal_static_grpc_testing_ServerStats_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.grpc.testing.QpsTestProto.internal_static_grpc_testing_ServerStats_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.grpc.testing.ServerStats.class, io.grpc.testing.ServerStats.Builder.class);
  }

  public static final int TIME_ELAPSED_FIELD_NUMBER = 1;
  private double timeElapsed_;
  /**
   * <code>optional double time_elapsed = 1;</code>
   *
   * <pre>
   * wall clock time
   * </pre>
   */
  public double getTimeElapsed() {
    return timeElapsed_;
  }

  public static final int TIME_USER_FIELD_NUMBER = 2;
  private double timeUser_;
  /**
   * <code>optional double time_user = 2;</code>
   *
   * <pre>
   * user time used by the server process and threads
   * </pre>
   */
  public double getTimeUser() {
    return timeUser_;
  }

  public static final int TIME_SYSTEM_FIELD_NUMBER = 3;
  private double timeSystem_;
  /**
   * <code>optional double time_system = 3;</code>
   *
   * <pre>
   * server time used by the server process and all threads
   * </pre>
   */
  public double getTimeSystem() {
    return timeSystem_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (timeElapsed_ != 0D) {
      output.writeDouble(1, timeElapsed_);
    }
    if (timeUser_ != 0D) {
      output.writeDouble(2, timeUser_);
    }
    if (timeSystem_ != 0D) {
      output.writeDouble(3, timeSystem_);
    }
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (timeElapsed_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(1, timeElapsed_);
    }
    if (timeUser_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, timeUser_);
    }
    if (timeSystem_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, timeSystem_);
    }
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static io.grpc.testing.ServerStats parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grpc.testing.ServerStats parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grpc.testing.ServerStats parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grpc.testing.ServerStats parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grpc.testing.ServerStats parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.grpc.testing.ServerStats parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static io.grpc.testing.ServerStats parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static io.grpc.testing.ServerStats parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static io.grpc.testing.ServerStats parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.grpc.testing.ServerStats parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.grpc.testing.ServerStats prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code grpc.testing.ServerStats}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:grpc.testing.ServerStats)
      io.grpc.testing.ServerStatsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.grpc.testing.QpsTestProto.internal_static_grpc_testing_ServerStats_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.grpc.testing.QpsTestProto.internal_static_grpc_testing_ServerStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.grpc.testing.ServerStats.class, io.grpc.testing.ServerStats.Builder.class);
    }

    // Construct using io.grpc.testing.ServerStats.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      timeElapsed_ = 0D;

      timeUser_ = 0D;

      timeSystem_ = 0D;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.grpc.testing.QpsTestProto.internal_static_grpc_testing_ServerStats_descriptor;
    }

    public io.grpc.testing.ServerStats getDefaultInstanceForType() {
      return io.grpc.testing.ServerStats.getDefaultInstance();
    }

    public io.grpc.testing.ServerStats build() {
      io.grpc.testing.ServerStats result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.grpc.testing.ServerStats buildPartial() {
      io.grpc.testing.ServerStats result = new io.grpc.testing.ServerStats(this);
      result.timeElapsed_ = timeElapsed_;
      result.timeUser_ = timeUser_;
      result.timeSystem_ = timeSystem_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.grpc.testing.ServerStats) {
        return mergeFrom((io.grpc.testing.ServerStats)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.grpc.testing.ServerStats other) {
      if (other == io.grpc.testing.ServerStats.getDefaultInstance()) return this;
      if (other.getTimeElapsed() != 0D) {
        setTimeElapsed(other.getTimeElapsed());
      }
      if (other.getTimeUser() != 0D) {
        setTimeUser(other.getTimeUser());
      }
      if (other.getTimeSystem() != 0D) {
        setTimeSystem(other.getTimeSystem());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.grpc.testing.ServerStats parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.grpc.testing.ServerStats) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private double timeElapsed_ ;
    /**
     * <code>optional double time_elapsed = 1;</code>
     *
     * <pre>
     * wall clock time
     * </pre>
     */
    public double getTimeElapsed() {
      return timeElapsed_;
    }
    /**
     * <code>optional double time_elapsed = 1;</code>
     *
     * <pre>
     * wall clock time
     * </pre>
     */
    public Builder setTimeElapsed(double value) {
      
      timeElapsed_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double time_elapsed = 1;</code>
     *
     * <pre>
     * wall clock time
     * </pre>
     */
    public Builder clearTimeElapsed() {
      
      timeElapsed_ = 0D;
      onChanged();
      return this;
    }

    private double timeUser_ ;
    /**
     * <code>optional double time_user = 2;</code>
     *
     * <pre>
     * user time used by the server process and threads
     * </pre>
     */
    public double getTimeUser() {
      return timeUser_;
    }
    /**
     * <code>optional double time_user = 2;</code>
     *
     * <pre>
     * user time used by the server process and threads
     * </pre>
     */
    public Builder setTimeUser(double value) {
      
      timeUser_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double time_user = 2;</code>
     *
     * <pre>
     * user time used by the server process and threads
     * </pre>
     */
    public Builder clearTimeUser() {
      
      timeUser_ = 0D;
      onChanged();
      return this;
    }

    private double timeSystem_ ;
    /**
     * <code>optional double time_system = 3;</code>
     *
     * <pre>
     * server time used by the server process and all threads
     * </pre>
     */
    public double getTimeSystem() {
      return timeSystem_;
    }
    /**
     * <code>optional double time_system = 3;</code>
     *
     * <pre>
     * server time used by the server process and all threads
     * </pre>
     */
    public Builder setTimeSystem(double value) {
      
      timeSystem_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double time_system = 3;</code>
     *
     * <pre>
     * server time used by the server process and all threads
     * </pre>
     */
    public Builder clearTimeSystem() {
      
      timeSystem_ = 0D;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:grpc.testing.ServerStats)
  }

  // @@protoc_insertion_point(class_scope:grpc.testing.ServerStats)
  private static final io.grpc.testing.ServerStats DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.grpc.testing.ServerStats();
  }

  public static io.grpc.testing.ServerStats getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  public static final com.google.protobuf.Parser<ServerStats> PARSER =
      new com.google.protobuf.AbstractParser<ServerStats>() {
    public ServerStats parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new ServerStats(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<ServerStats> getParserForType() {
    return PARSER;
  }

  public io.grpc.testing.ServerStats getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

