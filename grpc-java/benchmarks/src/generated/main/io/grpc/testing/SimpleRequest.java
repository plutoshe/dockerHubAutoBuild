// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qpstest.proto

package io.grpc.testing;

/**
 * Protobuf type {@code grpc.testing.SimpleRequest}
 */
public  final class SimpleRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:grpc.testing.SimpleRequest)
    SimpleRequestOrBuilder {
  // Use SimpleRequest.newBuilder() to construct.
  private SimpleRequest(com.google.protobuf.GeneratedMessage.Builder builder) {
    super(builder);
  }
  private SimpleRequest() {
    responseType_ = 0;
    responseSize_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private SimpleRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            int rawValue = input.readEnum();

            responseType_ = rawValue;
            break;
          }
          case 16: {

            responseSize_ = input.readInt32();
            break;
          }
          case 26: {
            io.grpc.testing.Payload.Builder subBuilder = null;
            if (payload_ != null) {
              subBuilder = payload_.toBuilder();
            }
            payload_ = input.readMessage(io.grpc.testing.Payload.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(payload_);
              payload_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.grpc.testing.QpsTestProto.internal_static_grpc_testing_SimpleRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.grpc.testing.QpsTestProto.internal_static_grpc_testing_SimpleRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.grpc.testing.SimpleRequest.class, io.grpc.testing.SimpleRequest.Builder.class);
  }

  public static final int RESPONSE_TYPE_FIELD_NUMBER = 1;
  private int responseType_;
  /**
   * <code>optional .grpc.testing.PayloadType response_type = 1;</code>
   *
   * <pre>
   * Desired payload type in the response from the server.
   * If response_type is RANDOM, server randomly chooses one from other formats.
   * </pre>
   */
  public int getResponseTypeValue() {
    return responseType_;
  }
  /**
   * <code>optional .grpc.testing.PayloadType response_type = 1;</code>
   *
   * <pre>
   * Desired payload type in the response from the server.
   * If response_type is RANDOM, server randomly chooses one from other formats.
   * </pre>
   */
  public io.grpc.testing.PayloadType getResponseType() {
    io.grpc.testing.PayloadType result = io.grpc.testing.PayloadType.valueOf(responseType_);
    return result == null ? io.grpc.testing.PayloadType.UNRECOGNIZED : result;
  }

  public static final int RESPONSE_SIZE_FIELD_NUMBER = 2;
  private int responseSize_;
  /**
   * <code>optional int32 response_size = 2;</code>
   *
   * <pre>
   * Desired payload size in the response from the server.
   * If response_type is COMPRESSABLE, this denotes the size before compression.
   * </pre>
   */
  public int getResponseSize() {
    return responseSize_;
  }

  public static final int PAYLOAD_FIELD_NUMBER = 3;
  private io.grpc.testing.Payload payload_;
  /**
   * <code>optional .grpc.testing.Payload payload = 3;</code>
   *
   * <pre>
   * Optional input payload sent along with the request.
   * </pre>
   */
  public boolean hasPayload() {
    return payload_ != null;
  }
  /**
   * <code>optional .grpc.testing.Payload payload = 3;</code>
   *
   * <pre>
   * Optional input payload sent along with the request.
   * </pre>
   */
  public io.grpc.testing.Payload getPayload() {
    return payload_ == null ? io.grpc.testing.Payload.getDefaultInstance() : payload_;
  }
  /**
   * <code>optional .grpc.testing.Payload payload = 3;</code>
   *
   * <pre>
   * Optional input payload sent along with the request.
   * </pre>
   */
  public io.grpc.testing.PayloadOrBuilder getPayloadOrBuilder() {
    return getPayload();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (responseType_ != io.grpc.testing.PayloadType.COMPRESSABLE.getNumber()) {
      output.writeEnum(1, responseType_);
    }
    if (responseSize_ != 0) {
      output.writeInt32(2, responseSize_);
    }
    if (payload_ != null) {
      output.writeMessage(3, getPayload());
    }
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (responseType_ != io.grpc.testing.PayloadType.COMPRESSABLE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, responseType_);
    }
    if (responseSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, responseSize_);
    }
    if (payload_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getPayload());
    }
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static io.grpc.testing.SimpleRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grpc.testing.SimpleRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grpc.testing.SimpleRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.grpc.testing.SimpleRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.grpc.testing.SimpleRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.grpc.testing.SimpleRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static io.grpc.testing.SimpleRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static io.grpc.testing.SimpleRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static io.grpc.testing.SimpleRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.grpc.testing.SimpleRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.grpc.testing.SimpleRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code grpc.testing.SimpleRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:grpc.testing.SimpleRequest)
      io.grpc.testing.SimpleRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.grpc.testing.QpsTestProto.internal_static_grpc_testing_SimpleRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.grpc.testing.QpsTestProto.internal_static_grpc_testing_SimpleRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.grpc.testing.SimpleRequest.class, io.grpc.testing.SimpleRequest.Builder.class);
    }

    // Construct using io.grpc.testing.SimpleRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      responseType_ = 0;

      responseSize_ = 0;

      if (payloadBuilder_ == null) {
        payload_ = null;
      } else {
        payload_ = null;
        payloadBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.grpc.testing.QpsTestProto.internal_static_grpc_testing_SimpleRequest_descriptor;
    }

    public io.grpc.testing.SimpleRequest getDefaultInstanceForType() {
      return io.grpc.testing.SimpleRequest.getDefaultInstance();
    }

    public io.grpc.testing.SimpleRequest build() {
      io.grpc.testing.SimpleRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.grpc.testing.SimpleRequest buildPartial() {
      io.grpc.testing.SimpleRequest result = new io.grpc.testing.SimpleRequest(this);
      result.responseType_ = responseType_;
      result.responseSize_ = responseSize_;
      if (payloadBuilder_ == null) {
        result.payload_ = payload_;
      } else {
        result.payload_ = payloadBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.grpc.testing.SimpleRequest) {
        return mergeFrom((io.grpc.testing.SimpleRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.grpc.testing.SimpleRequest other) {
      if (other == io.grpc.testing.SimpleRequest.getDefaultInstance()) return this;
      if (other.responseType_ != 0) {
        setResponseTypeValue(other.getResponseTypeValue());
      }
      if (other.getResponseSize() != 0) {
        setResponseSize(other.getResponseSize());
      }
      if (other.hasPayload()) {
        mergePayload(other.getPayload());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.grpc.testing.SimpleRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.grpc.testing.SimpleRequest) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int responseType_ = 0;
    /**
     * <code>optional .grpc.testing.PayloadType response_type = 1;</code>
     *
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, server randomly chooses one from other formats.
     * </pre>
     */
    public int getResponseTypeValue() {
      return responseType_;
    }
    /**
     * <code>optional .grpc.testing.PayloadType response_type = 1;</code>
     *
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, server randomly chooses one from other formats.
     * </pre>
     */
    public Builder setResponseTypeValue(int value) {
      responseType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional .grpc.testing.PayloadType response_type = 1;</code>
     *
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, server randomly chooses one from other formats.
     * </pre>
     */
    public io.grpc.testing.PayloadType getResponseType() {
      io.grpc.testing.PayloadType result = io.grpc.testing.PayloadType.valueOf(responseType_);
      return result == null ? io.grpc.testing.PayloadType.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .grpc.testing.PayloadType response_type = 1;</code>
     *
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, server randomly chooses one from other formats.
     * </pre>
     */
    public Builder setResponseType(io.grpc.testing.PayloadType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      responseType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .grpc.testing.PayloadType response_type = 1;</code>
     *
     * <pre>
     * Desired payload type in the response from the server.
     * If response_type is RANDOM, server randomly chooses one from other formats.
     * </pre>
     */
    public Builder clearResponseType() {
      
      responseType_ = 0;
      onChanged();
      return this;
    }

    private int responseSize_ ;
    /**
     * <code>optional int32 response_size = 2;</code>
     *
     * <pre>
     * Desired payload size in the response from the server.
     * If response_type is COMPRESSABLE, this denotes the size before compression.
     * </pre>
     */
    public int getResponseSize() {
      return responseSize_;
    }
    /**
     * <code>optional int32 response_size = 2;</code>
     *
     * <pre>
     * Desired payload size in the response from the server.
     * If response_type is COMPRESSABLE, this denotes the size before compression.
     * </pre>
     */
    public Builder setResponseSize(int value) {
      
      responseSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 response_size = 2;</code>
     *
     * <pre>
     * Desired payload size in the response from the server.
     * If response_type is COMPRESSABLE, this denotes the size before compression.
     * </pre>
     */
    public Builder clearResponseSize() {
      
      responseSize_ = 0;
      onChanged();
      return this;
    }

    private io.grpc.testing.Payload payload_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.grpc.testing.Payload, io.grpc.testing.Payload.Builder, io.grpc.testing.PayloadOrBuilder> payloadBuilder_;
    /**
     * <code>optional .grpc.testing.Payload payload = 3;</code>
     *
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     */
    public boolean hasPayload() {
      return payloadBuilder_ != null || payload_ != null;
    }
    /**
     * <code>optional .grpc.testing.Payload payload = 3;</code>
     *
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     */
    public io.grpc.testing.Payload getPayload() {
      if (payloadBuilder_ == null) {
        return payload_ == null ? io.grpc.testing.Payload.getDefaultInstance() : payload_;
      } else {
        return payloadBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .grpc.testing.Payload payload = 3;</code>
     *
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     */
    public Builder setPayload(io.grpc.testing.Payload value) {
      if (payloadBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        payload_ = value;
        onChanged();
      } else {
        payloadBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .grpc.testing.Payload payload = 3;</code>
     *
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     */
    public Builder setPayload(
        io.grpc.testing.Payload.Builder builderForValue) {
      if (payloadBuilder_ == null) {
        payload_ = builderForValue.build();
        onChanged();
      } else {
        payloadBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .grpc.testing.Payload payload = 3;</code>
     *
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     */
    public Builder mergePayload(io.grpc.testing.Payload value) {
      if (payloadBuilder_ == null) {
        if (payload_ != null) {
          payload_ =
            io.grpc.testing.Payload.newBuilder(payload_).mergeFrom(value).buildPartial();
        } else {
          payload_ = value;
        }
        onChanged();
      } else {
        payloadBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .grpc.testing.Payload payload = 3;</code>
     *
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     */
    public Builder clearPayload() {
      if (payloadBuilder_ == null) {
        payload_ = null;
        onChanged();
      } else {
        payload_ = null;
        payloadBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .grpc.testing.Payload payload = 3;</code>
     *
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     */
    public io.grpc.testing.Payload.Builder getPayloadBuilder() {
      
      onChanged();
      return getPayloadFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .grpc.testing.Payload payload = 3;</code>
     *
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     */
    public io.grpc.testing.PayloadOrBuilder getPayloadOrBuilder() {
      if (payloadBuilder_ != null) {
        return payloadBuilder_.getMessageOrBuilder();
      } else {
        return payload_ == null ?
            io.grpc.testing.Payload.getDefaultInstance() : payload_;
      }
    }
    /**
     * <code>optional .grpc.testing.Payload payload = 3;</code>
     *
     * <pre>
     * Optional input payload sent along with the request.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.grpc.testing.Payload, io.grpc.testing.Payload.Builder, io.grpc.testing.PayloadOrBuilder> 
        getPayloadFieldBuilder() {
      if (payloadBuilder_ == null) {
        payloadBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.grpc.testing.Payload, io.grpc.testing.Payload.Builder, io.grpc.testing.PayloadOrBuilder>(
                getPayload(),
                getParentForChildren(),
                isClean());
        payload_ = null;
      }
      return payloadBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:grpc.testing.SimpleRequest)
  }

  // @@protoc_insertion_point(class_scope:grpc.testing.SimpleRequest)
  private static final io.grpc.testing.SimpleRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.grpc.testing.SimpleRequest();
  }

  public static io.grpc.testing.SimpleRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  public static final com.google.protobuf.Parser<SimpleRequest> PARSER =
      new com.google.protobuf.AbstractParser<SimpleRequest>() {
    public SimpleRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new SimpleRequest(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<SimpleRequest> getParserForType() {
    return PARSER;
  }

  public io.grpc.testing.SimpleRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

